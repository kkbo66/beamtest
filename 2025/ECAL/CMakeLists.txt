cmake_minimum_required (VERSION 3.1)

project ("ECALBeamTest")

SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -g2 -ggdb")
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_GIBCXX_USE_CXX11_ABI=0")

#add_subdirectory(csv)

#SET(CMAKE_CXX_STANDARD 14)

find_package(ROOT REQUIRED)
# find_package(ROOT COMPONENTS RooFit RooFitCore Minuit REQUIRED)
#set(PLOTTOOL_INCLUDE_DIR /home/ylliu/downloads/PlotTool/include)
#set(PLOTTOOL_LINK_DIR /home/ylliu/downloads/PlotTool/dylib)

include_directories(${PROJECT_SOURCE_DIR}/include ${ROOT_INCLUDE_DIR})
#link_directories(${PLOTTOOL_LINK_DIR})
include(${ROOT_USE_FILE})

file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)

add_executable(ECALdig2root "ECALdig2root.cc" ${sources} ${headers})
target_link_libraries(ECALdig2root ${ROOT_LIBRARIES})

add_executable(ECALdig2root2025 "ECALdig2root2025.cc" ${sources} ${headers})
target_link_libraries(ECALdig2root2025 ${ROOT_LIBRARIES})

add_executable(ECALDigi "ECALDigi.cc" ${sources} ${headers})
target_link_libraries(ECALDigi ${ROOT_LIBRARIES})

add_executable(ECALTrigger "ECALTrigger.cc" ${sources} ${headers})
target_link_libraries(ECALTrigger ${ROOT_LIBRARIES})

add_executable(SeekParameters "SeekParameters.cc" ${sources} ${headers})
target_link_libraries(SeekParameters ${ROOT_LIBRARIES})

#add_executable(ReadRootFile "ReadRootFile.cc" ${sources} ${headers})
#target_link_libraries(ReadRootFile ${ROOT_LIBRARIES})

#add_executable(Filter "Filter.cc" ${sources} ${headers})
#target_link_libraries(Filter ${ROOT_LIBRARIES})

add_executable(Reconstruction "Reconstruction.cc" ${sources} ${headers})
target_link_libraries(Reconstruction ${ROOT_LIBRARIES})

#add_executable(GetWaveform "GetWaveform.cc" ${sources} ${headers})
#target_link_libraries(GetWaveform ${ROOT_LIBRARIES})

#add_executable(RecTime "RecTime.cc" ${sources} ${headers})
#target_link_libraries(RecTime ${ROOT_LIBRARIES})


#add_executable(TriggerDecode "TriggerDecode.cc" ${sources} ${headers})
#target_link_libraries(TriggerDecode ${ROOT_LIBRARIES})

# ROOT_GENERATE_DICTIONARY(data_model_dict ${PROJECT_SOURCE_DIR}/include/data_model.hh
#   MODULE data_model
#   LINKDEF ${PROJECT_SOURCE_DIR}/include/LinkDef.h)
# ROOT_LINKER_LIBRARY(data_model ${PROJECT_SOURCE_DIR}/src/data_model.cc data_model_dict.cxx LIBRARIES Core)
# add_library(data_model SHARED data_model_dict.cxx ${sources} ${headers})
# target_link_libraries(data_model ${ROOT_LIBRARIES})

# file(WRITE ${CMAKE_BINARY_DIR}/setup.sh
#     "#!/bin/bash\n"
#     "# Generated by cmake \n"
#     "export LD_LIBRARY_PATH=${CMAKE_BINARY_DIR}:\${LD_LIBRARY_PATH}\n"
#     "\n"
# )
